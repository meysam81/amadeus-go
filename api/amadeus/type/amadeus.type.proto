syntax = "proto3";

package amadeus.type;

// msgCode: 0050
message Response {
    repeated Data data = 1;
    Dictionaries dictionaries = 2;
    Meta meta = 3;
    repeated ErrorWarning warnings = 4;
    repeated ErrorWarning errors = 5;
}

// msgCode: 0051
message Data {
    string id = 1;
    string type = 2;
    repeated OfferItem offerItems = 3;
    string destination = 4;
    string subType = 5;
    Analytics analytics = 6;
    string period = 7;
    string name = 8;
    string detailedName = 9;
    string timeZoneOffset = 10;
    string iataCode = 11;
    GeoCode geoCode = 12;
    Address address = 13;
    Distance distance = 14;
    float relevance = 15;
    string origin = 16;
    string departureDate = 17;
    string returnDate = 18;
    Price price = 19;
    Links links = 20;
    Self self = 21;
    string href = 22;
    string channel = 23;
    map<string, ParamDetail> parameters = 24;
    string icaoCode = 25;
    string businessName = 26;
    string commonName = 27;

}

// msgCode: 0052
message OfferItem {
    repeated Service services = 1;
    Price price = 2;
    Price pricePerAdult = 3;
}

// msgCode: 0053
message Service {
    repeated Segment segments = 1;
}

// msgCode: 0054
message Segment {
    FlightSegment flightSegment = 1;
    PricingDetailPerAdult pricingDetailPerAdult = 2;
}

// msgCode: 0055
message FlightSegment {
    DepartureArrival departure = 1;
    DepartureArrival arrival = 2;
    string carrierCode = 3;
    string number = 4;
    Aircraft aircraft = 5;
    Operating operating = 6;
    string duration = 7;
}

// msgCode: 0056
message DepartureArrival {
    string iataCode = 1;
    string terminal = 2;
    string at = 3;
}

// msgCode: 0057
message Aircraft {
    string code = 1;
}

// msgCode: 0058
message Operating {
    string carrierCode = 3;
    string number = 4;
}

// msgCode: 0059
message PricingDetailPerAdult {
    string travelClass = 1;
    string fareClass = 2;
    int32 availability = 3;
    string fareBasis = 4;
}

// msgCode: 0060
message Price {
    string total = 1;
    string totalTaxes = 2;
}

// msgCode: 0061
message Dictionaries {
    // you MAY need to change this, but unnecessary at the moment I assume
    map<string, string> carriers = 1;
    map<string, string> currencies = 2;
    map<string, string> aircrafts = 3;
    map<string, LocationDetail> locations = 4;
}

// msgCode: 0062
message Carrier {
    map<string, string>  carrier = 1;
}

// msgCode: 0063
message Currency {
    map<string, string>  currency = 1;
}

// msgCode: 0064
message DictionariesAircraft {
    map<string, string>  aircraft = 1;
}

// msgCode: 0065
message Location {
    map<string, LocationDetail>  location = 1;
}

// msgCode: 0066
message LocationDetail {
    map<string, string>  detail = 1;
}

// msgCode: 0067
message Meta {
    Links links = 1;
    string currency = 2;
    Defaults defaults = 3;
    int32 count = 4;
}

// msgCode: 0068
message Links {
    string self = 1;
    string next = 2;
    string last = 3;
    string flightDates = 4;
    string flightOffers = 5;
    string flightDestinations = 6;
}

// msgCode: 0069
message Defaults {
    bool nonStop = 1;
    int32 adults = 2;
    string departureDate = 3;
    bool oneWay = 4;
    string duration = 5;
    string viewBy = 6;
}

// msgCode: 0070
message Analytics {
    Score flights = 1;
    Score travelers = 2;
    Score searches = 3;
}

// msgCode: 0071
message Score {
    int32 score = 1;
    NumberOfSearches numberOfSearches = 2;
}

// msgCode: 0072
message GeoCode {
    float latitude = 1;
    float longitude = 2;
}

// msgCode: 0073
message Address {
    string cityName = 1;
    string cityCode = 2;
    string countryName = 3;
    string countryCode = 4;
    string stateCode = 5;
    string regionCode = 6;
}

// msgCode: 0074
message Distance {
    int32 value = 1;
    string unit = 2;
}

// msgCode: 0075
message Self {
    string href = 1;
    repeated string methods = 2;
}

// msgCode: 0076
message ErrorWarning {
    int32 status = 1;
    int32 code = 2;
    string title = 3;
    string detail = 4;
    Source source = 5;
}

// msgCode: 0077
message Source {
    string pointer = 1;
    string parameter = 2;
    string example = 3;
}

// msgCode: 0078
message NumberOfSearches {
    map<string, string> perTripDuration = 1;
    map<string, string> perDaysInAdvance = 2;
}

// msgCode: 0079
message ParamDetail {
    string description = 1;
    string type = 2;
    string format = 3;
}

// msgCode: 0080
enum TravelClass {
    ECONOMY = 0;
    PREMIUM_ECONOMY = 1;
    BUSINESS = 2;
    FIRST = 3;
}

